// Code generated by MockGen. DO NOT EDIT.
// Source: domain/service/system.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSystemService is a mock of SystemService interface
type MockSystemService struct {
	ctrl     *gomock.Controller
	recorder *MockSystemServiceMockRecorder
}

// MockSystemServiceMockRecorder is the mock recorder for MockSystemService
type MockSystemServiceMockRecorder struct {
	mock *MockSystemService
}

// NewMockSystemService creates a new mock instance
func NewMockSystemService(ctrl *gomock.Controller) *MockSystemService {
	mock := &MockSystemService{ctrl: ctrl}
	mock.recorder = &MockSystemServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSystemService) EXPECT() *MockSystemServiceMockRecorder {
	return m.recorder
}

// Ready mocks base method
func (m *MockSystemService) Ready(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ready", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Ready indicates an expected call of Ready
func (mr *MockSystemServiceMockRecorder) Ready(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ready", reflect.TypeOf((*MockSystemService)(nil).Ready), ctx)
}
