// Code generated by MockGen. DO NOT EDIT.
// Source: domain/repository/system.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSystemRepository is a mock of SystemRepository interface
type MockSystemRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSystemRepositoryMockRecorder
}

// MockSystemRepositoryMockRecorder is the mock recorder for MockSystemRepository
type MockSystemRepositoryMockRecorder struct {
	mock *MockSystemRepository
}

// NewMockSystemRepository creates a new mock instance
func NewMockSystemRepository(ctrl *gomock.Controller) *MockSystemRepository {
	mock := &MockSystemRepository{ctrl: ctrl}
	mock.recorder = &MockSystemRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSystemRepository) EXPECT() *MockSystemRepositoryMockRecorder {
	return m.recorder
}

// Ready mocks base method
func (m *MockSystemRepository) Ready(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ready", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Ready indicates an expected call of Ready
func (mr *MockSystemRepositoryMockRecorder) Ready(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ready", reflect.TypeOf((*MockSystemRepository)(nil).Ready), ctx)
}
