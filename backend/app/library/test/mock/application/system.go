// Code generated by MockGen. DO NOT EDIT.
// Source: application/system.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSystemInteractor is a mock of SystemInteractor interface
type MockSystemInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockSystemInteractorMockRecorder
}

// MockSystemInteractorMockRecorder is the mock recorder for MockSystemInteractor
type MockSystemInteractorMockRecorder struct {
	mock *MockSystemInteractor
}

// NewMockSystemInteractor creates a new mock instance
func NewMockSystemInteractor(ctrl *gomock.Controller) *MockSystemInteractor {
	mock := &MockSystemInteractor{ctrl: ctrl}
	mock.recorder = &MockSystemInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSystemInteractor) EXPECT() *MockSystemInteractorMockRecorder {
	return m.recorder
}

// Ready mocks base method
func (m *MockSystemInteractor) Ready(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ready", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Ready indicates an expected call of Ready
func (mr *MockSystemInteractorMockRecorder) Ready(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ready", reflect.TypeOf((*MockSystemInteractor)(nil).Ready), ctx)
}
